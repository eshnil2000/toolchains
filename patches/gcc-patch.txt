diff -durN gcc-6.2.0/gcc/config/i386/t-x86_64-elf gcc-6.2.0.patched/gcc/config/i386/t-x86_64-elf
--- gcc-6.2.0/gcc/config/i386/t-x86_64-elf	1969-12-31 16:00:00.000000000 -0800
+++ gcc-6.2.0.patched/gcc/config/i386/t-x86_64-elf	2016-09-30 11:55:53.602700086 -0700
@@ -0,0 +1,8 @@
+# Add redzoneless libgcc
+MULTILIB_OPTIONS  += mno-red-zone
+MULTILIB_DIRNAMES += no-red-zone
+
+# Build a 32bit libgcc as well
+# NOTE: disabled for now, does not seem to build properly with gcc 10
+#MULTILIB_OPTIONS  += m32
+#MULTILIB_DIRNAMES  += 32
diff -durN gcc-7.4.0/gcc/config/riscv/t-elf-multilib gcc-7.4.0.patched/gcc/config/riscv/t-elf-multilib
--- gcc-7.4.0/gcc/config/riscv/t-elf-multilib	2017-02-06 13:38:37.794530000 -0800
+++ gcc-7.4.0.patched/gcc/config/riscv/t-elf-multilib	2019-11-02 15:51:54.556652490 -0700
@@ -28,3 +28,10 @@
 march.rv32imafc/mabi.ilp32f=march.rv32imafdc/mabi.ilp32f \
 march.rv32imafc/mabi.ilp32f=march.rv32gc/mabi.ilp32f \
 march.rv64imafdc/mabi.lp64d=march.rv64gc/mabi.lp64d
+
+# build variants of the 64bit libgccs with mcmodel=medany flag set
+MULTILIB_OPTIONS += mcmodel=medany
+MULTILIB_DIRNAMES += medany
+MULTILIB_REQUIRED += \
+march=rv64imac/mabi=lp64/mcmodel=medany \
+march=rv64imafdc/mabi=lp64d/mcmodel=medany
diff -durN gcc-7.4.0/gcc/config.gcc gcc-7.4.0.patched/gcc/config.gcc
--- gcc-7.4.0/gcc/config.gcc	2018-06-21 02:36:40.653070000 -0700
+++ gcc-7.4.0.patched/gcc/config.gcc	2019-11-02 15:32:31.859001760 -0700
@@ -1458,6 +1458,7 @@
 	tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h newlib-stdint.h i386/i386elf.h"
 	;;
 x86_64-*-elf*)
+	tmake_file="${tmake_file} i386/t-x86_64-elf"
 	tm_file="${tm_file} i386/unix.h i386/att.h dbxelf.h elfos.h newlib-stdint.h i386/i386elf.h i386/x86-64.h"
 	;;
 x86_64-*-rtems*)
diff -durN gcc-8.3.0-orig/gcc/config/arm/t-arm-elf gcc-8.3.0/gcc/config/arm/t-arm-elf
--- gcc-8.3.0-orig/gcc/config/arm/t-arm-elf	2019-03-22 00:09:05.556706492 -0700
+++ gcc-8.3.0/gcc/config/arm/t-arm-elf	2019-05-07 22:42:28.855600499 -0700
@@ -62,9 +62,14 @@
 MULTILIB_REUSE	     =
 
 # PART 2 - multilib build rules
-
-MULTILIB_OPTIONS     += marm/mthumb
-MULTILIB_DIRNAMES    += arm thumb
+#
+# Before applying the MULTILIB_REQUIRED rules, this would build all
+# permutations of arm xor thumb with march=armv7 and mthumb-interwork
+#
+# Thanks to MULTILIB_REQUIRED, only the exact combination specified
+# are built, drastically shortening build time.
+MULTILIB_OPTIONS     += marm/mthumb march=armv7 mthumb-interwork
+MULTILIB_DIRNAMES    += arm thumb thumb2 interwork
 
 MULTILIB_OPTIONS     += mfpu=auto
 MULTILIB_DIRNAMES    += autofp
@@ -75,8 +80,21 @@
 MULTILIB_OPTIONS     += mfloat-abi=hard
 MULTILIB_DIRNAMES    += fpu
 
-# Build a total of 4 library variants (base options plus the following):
+# We now build 8 total libc.a, the 3 listed above and the 5 listed
+# here.
 MULTILIB_REQUIRED    += mthumb
+MULTILIB_REQUIRED    += mthumb-interwork
+MULTILIB_REQUIRED    += mthumb/march=armv7
+MULTILIB_REQUIRED    += mthumb/mthumb-interwork
+MULTILIB_REQUIRED    += mthumb/march=armv7/mthumb-interwork
+
+# Add explicit matches for some interesting mcpu tunings to make sure
+# they get mapped to the correct march
+MULTILIB_MATCHES     += march?armv6-m=mcpu?cortex-m0
+MULTILIB_MATCHES     += march?armv7=mcpu?cortex-m3
+MULTILIB_MATCHES     += march?armv7=mcpu?cortex-m4
+MULTILIB_MATCHES     += march?armv7=mcpu?cortex-m7
+
 MULTILIB_REQUIRED    += marm/mfpu=auto/march=armv5te+fp/mfloat-abi=hard
 MULTILIB_REQUIRED    += mthumb/mfpu=auto/march=armv7+fp/mfloat-abi=hard
 
